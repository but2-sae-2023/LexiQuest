{"ast":null,"code":"var _jsxFileName = \"/home/loic/Documents/LexiQuest/LexiQuest/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [value, setValue] = useState(\"Change me\");\n  const [dateTime, setDateTime] = useState(new Date());\n  var foo = 123;\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      setDateTime(new Date());\n    }, 1000);\n    return () => clearInterval(intervalId);\n  }, []);\n\n  // Fonction pour formater la date en français\n  function formatDate(date) {\n    const options = {\n      weekday: 'long',\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric',\n      hour: 'numeric',\n      minute: 'numeric',\n      second: 'numeric',\n      timeZone: 'Europe/Paris' // Définissez le fuseau horaire approprié\n    };\n    return date.toLocaleString('fr-FR', options);\n  }\n  function handleChange(event) {\n    setValue(event.currentTarget.value);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Date : \", formatDate(dateTime)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: value,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Value: \", value]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"XgDJliBvtfOOmRzETXKs9XyNABE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","value","setValue","dateTime","setDateTime","Date","foo","intervalId","setInterval","clearInterval","formatDate","date","options","weekday","year","month","day","hour","minute","second","timeZone","toLocaleString","handleChange","event","currentTarget","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","_c","$RefreshReg$"],"sources":["/home/loic/Documents/LexiQuest/LexiQuest/src/App.tsx"],"sourcesContent":["import React from 'react';\nimport { useState , useEffect } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  const [value, setValue] = useState(\"Change me\");\n  const [dateTime, setDateTime] = useState<Date>(new Date);\n\n  var foo: number = 123;\n\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      setDateTime(new Date());\n    }, 1000);\n\n    return () => clearInterval(intervalId);\n  }, []);\n\n  // Fonction pour formater la date en français\n  function formatDate(date: Date): string {\n    const options = {\n      weekday: 'long',\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric',\n      hour: 'numeric',\n      minute: 'numeric',\n      second: 'numeric',\n      timeZone: 'Europe/Paris' // Définissez le fuseau horaire approprié\n    };\n    return date.toLocaleString('fr-FR', options);\n  }\n\n  function handleChange(event: React.ChangeEvent<HTMLInputElement>) {\n    setValue(event.currentTarget.value);\n  }\n\n  return (\n    <>\n      <h1>Test</h1>\n      <p>Date : {formatDate(dateTime)}</p>\n      <input value={value} onChange={handleChange} />\n      <p>Value: {value}</p>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAGC,SAAS,QAAQ,OAAO;AAE5C,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,WAAW,CAAC;EAC/C,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAO,IAAIY,IAAI,CAAD,CAAC,CAAC;EAExD,IAAIC,GAAW,GAAG,GAAG;EAErBZ,SAAS,CAAC,MAAM;IACd,MAAMa,UAAU,GAAGC,WAAW,CAAC,MAAM;MACnCJ,WAAW,CAAC,IAAIC,IAAI,CAAC,CAAC,CAAC;IACzB,CAAC,EAAE,IAAI,CAAC;IAER,OAAO,MAAMI,aAAa,CAACF,UAAU,CAAC;EACxC,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,SAASG,UAAUA,CAACC,IAAU,EAAU;IACtC,MAAMC,OAAO,GAAG;MACdC,OAAO,EAAE,MAAM;MACfC,IAAI,EAAE,SAAS;MACfC,KAAK,EAAE,MAAM;MACbC,GAAG,EAAE,SAAS;MACdC,IAAI,EAAE,SAAS;MACfC,MAAM,EAAE,SAAS;MACjBC,MAAM,EAAE,SAAS;MACjBC,QAAQ,EAAE,cAAc,CAAC;IAC3B,CAAC;IACD,OAAOT,IAAI,CAACU,cAAc,CAAC,OAAO,EAAET,OAAO,CAAC;EAC9C;EAEA,SAASU,YAAYA,CAACC,KAA0C,EAAE;IAChErB,QAAQ,CAACqB,KAAK,CAACC,aAAa,CAACvB,KAAK,CAAC;EACrC;EAEA,oBACEL,OAAA,CAAAE,SAAA;IAAA2B,QAAA,gBACE7B,OAAA;MAAA6B,QAAA,EAAI;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACbjC,OAAA;MAAA6B,QAAA,GAAG,SAAO,EAACf,UAAU,CAACP,QAAQ,CAAC;IAAA;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpCjC,OAAA;MAAOK,KAAK,EAAEA,KAAM;MAAC6B,QAAQ,EAAER;IAAa;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC/CjC,OAAA;MAAA6B,QAAA,GAAG,SAAO,EAACxB,KAAK;IAAA;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA,eACrB,CAAC;AAEP;AAAC7B,EAAA,CAzCQD,GAAG;AAAAgC,EAAA,GAAHhC,GAAG;AA2CZ,eAAeA,GAAG;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}