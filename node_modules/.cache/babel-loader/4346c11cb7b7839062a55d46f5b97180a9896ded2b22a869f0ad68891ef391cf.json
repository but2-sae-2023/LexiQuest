{"ast":null,"code":"var _jsxFileName = \"/home/loic/Documents/LexiQuest/LexiQuest/src/frontend/Connexion.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\n\n// Enum pour les critères requis du mot de passe\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RequisMdp = {\n  caracteres12: \"12 caractères\",\n  majuscule: \"au moins une majuscule\",\n  minuscule: \"au moins une minuscule\",\n  caractereSpecial: \"au moins un caractère spécial\",\n  chiffre: \"au moins un chiffre\"\n};\nfunction Connexion() {\n  _s();\n  const [pseudo, setPseudo] = useState('');\n  const [mdp, setMdp] = useState('');\n\n  // Fonction pour vérifier si le mot de passe répond aux critères requis\n  const verifierRequisMdp = mdp => {\n    const critereRequis = Object.values(RequisMdp);\n    const resultat = critereRequis.map(critere => ({\n      critere,\n      accepte: false\n    }));\n    if (mdp.length >= 12) resultat[0].accepte = true;\n    if (/[A-Z]/.test(mdp)) resultat[1].accepte = true;\n    if (/[a-z]/.test(mdp)) resultat[2].accepte = true;\n    if (/[!@#$%^&*(),.?\":{}|<>]/.test(mdp)) resultat[3].accepte = true;\n    if (/\\d/.test(mdp)) resultat[4].accepte = true;\n    return resultat;\n  };\n\n  // Fonction pour afficher les critères requis en rouge et vert\n  const afficherRequisMdp = mdp => {\n    const criteres = verifierRequisMdp(mdp);\n    return criteres.map(({\n      critere,\n      accepte\n    }, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        color: accepte ? 'green' : 'red'\n      },\n      children: [critere, \" \"]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      method: \"post\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Connexion\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: event => setPseudo(event.target.value),\n          value: pseudo,\n          name: \"user\",\n          id: \"user\",\n          placeholder: \"Nom d'utilisateur\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          onChange: event => setMdp(event.target.value),\n          value: mdp,\n          name: \"pwd\",\n          id: \"pwd\",\n          placeholder: \"Mot de passe\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"attendu\",\n          children: afficherRequisMdp(mdp)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"../backend/forgotPwd.php\",\n            children: \"Mot de passe oubli\\xE9 ?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 24\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        id: \"submit\",\n        value: \"SE CONNECTER\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"options\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Vous n'avez pas de compte ? \", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"../backend/signup.php\",\n            children: \"S'inscrire\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 52\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n_s(Connexion, \"5LqGnDZtJvnIxSXsIobH9bDWm7E=\");\n_c = Connexion;\nexport default Connexion;\nvar _c;\n$RefreshReg$(_c, \"Connexion\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","RequisMdp","caracteres12","majuscule","minuscule","caractereSpecial","chiffre","Connexion","_s","pseudo","setPseudo","mdp","setMdp","verifierRequisMdp","critereRequis","Object","values","resultat","map","critere","accepte","length","test","afficherRequisMdp","criteres","index","style","color","children","fileName","_jsxFileName","lineNumber","columnNumber","className","method","type","onChange","event","target","value","name","id","placeholder","required","href","_c","$RefreshReg$"],"sources":["/home/loic/Documents/LexiQuest/LexiQuest/src/frontend/Connexion.tsx"],"sourcesContent":["import React, { useState } from 'react';\n\n// Enum pour les critères requis du mot de passe\nconst RequisMdp = {\n    caracteres12: \"12 caractères\",\n    majuscule: \"au moins une majuscule\",\n    minuscule: \"au moins une minuscule\",\n    caractereSpecial: \"au moins un caractère spécial\",\n    chiffre: \"au moins un chiffre\"\n};\n\nfunction Connexion() {\n    const [pseudo, setPseudo] = useState('');\n    const [mdp, setMdp] = useState('');\n\n    // Fonction pour vérifier si le mot de passe répond aux critères requis\n    const verifierRequisMdp = (mdp) => {\n        const critereRequis = Object.values(RequisMdp);\n        const resultat = critereRequis.map(critere => ({ critere, accepte: false }));\n\n        if (mdp.length >= 12) resultat[0].accepte = true;\n        if (/[A-Z]/.test(mdp)) resultat[1].accepte = true;\n        if (/[a-z]/.test(mdp)) resultat[2].accepte = true;\n        if (/[!@#$%^&*(),.?\":{}|<>]/.test(mdp)) resultat[3].accepte = true;\n        if (/\\d/.test(mdp)) resultat[4].accepte = true;\n\n        return resultat;\n    };\n\n    // Fonction pour afficher les critères requis en rouge et vert\n    const afficherRequisMdp = (mdp) => {\n        const criteres = verifierRequisMdp(mdp);\n        return criteres.map(({ critere, accepte }, index) => (\n            <span key={index} style={{ color: accepte ? 'green' : 'red' }}>{critere} </span>\n        ));\n    };\n\n    return (\n        <div className=\"container\">\n            <form method=\"post\">\n                <h1>Connexion</h1>\n                <div className=\"input\">\n                    <input type=\"text\" onChange={(event) => setPseudo(event.target.value)} value={pseudo} name=\"user\" id=\"user\" placeholder=\"Nom d'utilisateur\" required />\n                </div>\n                <div className=\"input\">\n                    <input type=\"password\" onChange={(event) => setMdp(event.target.value)} value={mdp} name=\"pwd\" id=\"pwd\" placeholder=\"Mot de passe\" required />\n                    <div id='attendu'>\n                        {afficherRequisMdp(mdp)}\n                    </div>\n                    <p><a href=\"../backend/forgotPwd.php\">Mot de passe oublié ?</a></p>\n                </div>\n                <input type=\"submit\" id=\"submit\" value=\"SE CONNECTER\" />\n                <div className=\"options\">\n                    <p>Vous n'avez pas de compte ? <a href=\"../backend/signup.php\">S'inscrire</a></p>\n                </div>\n            </form>\n        </div>\n    );\n}\n\nexport default Connexion;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}