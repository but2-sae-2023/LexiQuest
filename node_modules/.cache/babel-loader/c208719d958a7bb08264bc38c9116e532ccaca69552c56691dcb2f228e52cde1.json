{"ast":null,"code":"export class User {\n  constructor() {\n    this.user_id = void 0;\n    this.username = void 0;\n    this.email = void 0;\n    this.birth_year = void 0;\n    this.date_last_cnx = void 0;\n    this.date_signup = void 0;\n    this.image_path = void 0;\n    this.nb_game_played = void 0;\n    this.avg_score = void 0;\n    this.min_score = void 0;\n    this.max_score = void 0;\n    this.isConnected = void 0;\n    this.user_id = -1;\n    this.username = \"\";\n    this.email = \"\";\n    this.birth_year = -1;\n    this.date_last_cnx = new Date();\n    this.date_signup = new Date();\n    this.nb_game_played = -1;\n    this.avg_score = -1;\n    this.min_score = -1;\n    this.max_score = -1;\n    this.isConnected = false;\n    this.image_path = '';\n  }\n\n  /* Setter de connexion */\n  setConnected(co) {\n    this.isConnected = co;\n  }\n\n  /* Setter pour toutes les données de l'utilisateur */\n  setUser(props) {\n    this.user_id = props.user_id;\n    this.username = props.username;\n    this.email = props.email;\n    this.birth_year = props.birth_year;\n    this.date_last_cnx = props.date_last_cnx;\n    this.date_signup = props.date_signup;\n    this.nb_game_played = props.nb_game_played;\n    this.avg_score = props.avg_score;\n    this.min_score = props.min_score;\n    this.max_score = props.max_score;\n    return this;\n  }\n\n  /* Getter */\n  getUser_id() {\n    return this.user_id;\n  }\n  getUsername() {\n    return this.username;\n  }\n  getEmail() {\n    return this.email;\n  }\n  getBirth_year() {\n    return this.birth_year;\n  }\n  getDate_last_cnx() {\n    return this.date_last_cnx;\n  }\n  getDate_signup() {\n    return this.date_signup;\n  }\n  getNb_game_played() {\n    return this.nb_game_played;\n  }\n  getAvg_score() {\n    return this.avg_score;\n  }\n  getMin_score() {\n    return this.min_score;\n  }\n  getMax_score() {\n    return this.max_score;\n  }\n  getConnected() {\n    return this.isConnected;\n  }\n}\nexport default User;","map":{"version":3,"names":["User","constructor","user_id","username","email","birth_year","date_last_cnx","date_signup","image_path","nb_game_played","avg_score","min_score","max_score","isConnected","Date","setConnected","co","setUser","props","getUser_id","getUsername","getEmail","getBirth_year","getDate_last_cnx","getDate_signup","getNb_game_played","getAvg_score","getMin_score","getMax_score","getConnected"],"sources":["/home/3binf2/loic.mauritius/WWW-perso/LexiQuest/src/class/User.ts"],"sourcesContent":["export class User{\n    private user_id:number;\n    private username:string;\n    private email:string;\n    private birth_year:number;\n    private date_last_cnx:Date;\n    private date_signup:Date;\n    private image_path:string;\n\n    private nb_game_played:number;\n    private avg_score:number;\n    private min_score:number;\n    private max_score:number;\n    private isConnected:boolean;\n\n    constructor(){\n        this.user_id = -1;\n        this.username = \"\";\n        this.email = \"\";\n        this.birth_year = -1;\n        this.date_last_cnx = new Date();\n        this.date_signup = new Date();\n\n        this.nb_game_played = -1;\n        this.avg_score = -1;\n        this.min_score = -1;\n        this.max_score = -1;\n        this.isConnected = false;\n        this.image_path = '';\n    }\n\n    /* Setter de connexion */\n    setConnected(co:boolean){\n        this.isConnected = co;\n    }\n\n    /* Setter pour toutes les données de l'utilisateur */\n    setUser(props : { user_id,username,email,birth_year,date_last_cnx,date_signup,nb_game_played,avg_score,min_score,max_score }): User {\n        this.user_id = props.user_id;\n        this.username = props.username;\n        this.email = props.email;\n        this.birth_year = props.birth_year;\n        this.date_last_cnx = props.date_last_cnx;\n        this.date_signup = props.date_signup;\n        this.nb_game_played = props.nb_game_played;\n        this.avg_score = props.avg_score;\n        this.min_score = props.min_score;\n        this.max_score = props.max_score;\n      \n        return this;\n    }\n\n    /* Getter */\n    getUser_id() { return this.user_id; }\n    getUsername() { return this.username; }\n    getEmail() { return this.email; }\n    getBirth_year() { return this.birth_year; }\n    getDate_last_cnx() { return this.date_last_cnx; }\n    getDate_signup() { return this.date_signup; }\n    getNb_game_played() { return this.nb_game_played; }\n    getAvg_score() { return this.avg_score; }\n    getMin_score() { return this.min_score; }\n    getMax_score() { return this.max_score; }\n    getConnected() { return this.isConnected; }\n}\n\nexport default User;\n"],"mappings":"AAAA,OAAO,MAAMA,IAAI;EAebC,WAAWA,CAAA,EAAE;IAAA,KAdLC,OAAO;IAAA,KACPC,QAAQ;IAAA,KACRC,KAAK;IAAA,KACLC,UAAU;IAAA,KACVC,aAAa;IAAA,KACbC,WAAW;IAAA,KACXC,UAAU;IAAA,KAEVC,cAAc;IAAA,KACdC,SAAS;IAAA,KACTC,SAAS;IAAA,KACTC,SAAS;IAAA,KACTC,WAAW;IAGf,IAAI,CAACX,OAAO,GAAG,CAAC,CAAC;IACjB,IAAI,CAACC,QAAQ,GAAG,EAAE;IAClB,IAAI,CAACC,KAAK,GAAG,EAAE;IACf,IAAI,CAACC,UAAU,GAAG,CAAC,CAAC;IACpB,IAAI,CAACC,aAAa,GAAG,IAAIQ,IAAI,CAAC,CAAC;IAC/B,IAAI,CAACP,WAAW,GAAG,IAAIO,IAAI,CAAC,CAAC;IAE7B,IAAI,CAACL,cAAc,GAAG,CAAC,CAAC;IACxB,IAAI,CAACC,SAAS,GAAG,CAAC,CAAC;IACnB,IAAI,CAACC,SAAS,GAAG,CAAC,CAAC;IACnB,IAAI,CAACC,SAAS,GAAG,CAAC,CAAC;IACnB,IAAI,CAACC,WAAW,GAAG,KAAK;IACxB,IAAI,CAACL,UAAU,GAAG,EAAE;EACxB;;EAEA;EACAO,YAAYA,CAACC,EAAU,EAAC;IACpB,IAAI,CAACH,WAAW,GAAGG,EAAE;EACzB;;EAEA;EACAC,OAAOA,CAACC,KAAoH,EAAQ;IAChI,IAAI,CAAChB,OAAO,GAAGgB,KAAK,CAAChB,OAAO;IAC5B,IAAI,CAACC,QAAQ,GAAGe,KAAK,CAACf,QAAQ;IAC9B,IAAI,CAACC,KAAK,GAAGc,KAAK,CAACd,KAAK;IACxB,IAAI,CAACC,UAAU,GAAGa,KAAK,CAACb,UAAU;IAClC,IAAI,CAACC,aAAa,GAAGY,KAAK,CAACZ,aAAa;IACxC,IAAI,CAACC,WAAW,GAAGW,KAAK,CAACX,WAAW;IACpC,IAAI,CAACE,cAAc,GAAGS,KAAK,CAACT,cAAc;IAC1C,IAAI,CAACC,SAAS,GAAGQ,KAAK,CAACR,SAAS;IAChC,IAAI,CAACC,SAAS,GAAGO,KAAK,CAACP,SAAS;IAChC,IAAI,CAACC,SAAS,GAAGM,KAAK,CAACN,SAAS;IAEhC,OAAO,IAAI;EACf;;EAEA;EACAO,UAAUA,CAAA,EAAG;IAAE,OAAO,IAAI,CAACjB,OAAO;EAAE;EACpCkB,WAAWA,CAAA,EAAG;IAAE,OAAO,IAAI,CAACjB,QAAQ;EAAE;EACtCkB,QAAQA,CAAA,EAAG;IAAE,OAAO,IAAI,CAACjB,KAAK;EAAE;EAChCkB,aAAaA,CAAA,EAAG;IAAE,OAAO,IAAI,CAACjB,UAAU;EAAE;EAC1CkB,gBAAgBA,CAAA,EAAG;IAAE,OAAO,IAAI,CAACjB,aAAa;EAAE;EAChDkB,cAAcA,CAAA,EAAG;IAAE,OAAO,IAAI,CAACjB,WAAW;EAAE;EAC5CkB,iBAAiBA,CAAA,EAAG;IAAE,OAAO,IAAI,CAAChB,cAAc;EAAE;EAClDiB,YAAYA,CAAA,EAAG;IAAE,OAAO,IAAI,CAAChB,SAAS;EAAE;EACxCiB,YAAYA,CAAA,EAAG;IAAE,OAAO,IAAI,CAAChB,SAAS;EAAE;EACxCiB,YAAYA,CAAA,EAAG;IAAE,OAAO,IAAI,CAAChB,SAAS;EAAE;EACxCiB,YAAYA,CAAA,EAAG;IAAE,OAAO,IAAI,CAAChB,WAAW;EAAE;AAC9C;AAEA,eAAeb,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}